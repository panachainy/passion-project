// Code generated by MockGen. DO NOT EDIT.
// Source: service.go

// Package mock is a generated GoMock package.
package mock

import (
	covid "covid-19-api/internal/covid"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockCovidService is a mock of CovidService interface.
type MockCovidService struct {
	ctrl     *gomock.Controller
	recorder *MockCovidServiceMockRecorder
}

// MockCovidServiceMockRecorder is the mock recorder for MockCovidService.
type MockCovidServiceMockRecorder struct {
	mock *MockCovidService
}

// NewMockCovidService creates a new mock instance.
func NewMockCovidService(ctrl *gomock.Controller) *MockCovidService {
	mock := &MockCovidService{ctrl: ctrl}
	mock.recorder = &MockCovidServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCovidService) EXPECT() *MockCovidServiceMockRecorder {
	return m.recorder
}

// GetToday mocks base method.
func (m *MockCovidService) GetToday() (covid.CovidClientResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetToday")
	ret0, _ := ret[0].(covid.CovidClientResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetToday indicates an expected call of GetToday.
func (mr *MockCovidServiceMockRecorder) GetToday() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetToday", reflect.TypeOf((*MockCovidService)(nil).GetToday))
}
